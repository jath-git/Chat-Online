{"ast":null,"code":"var _jsxFileName = \"/Users/jathu/Desktop/Clones/chat-online/client/src/components/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst port = 5000;\nconst endpoint = `localhost:${port}`;\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('dwada');\n  const [room, setRoom] = useState('');\n  useEffect(() => {\n    const getName = location.search.substring(6, location.search.indexOf('&'));\n    const getRoom = location.search.substring(location.search.indexOf('&') + 6);\n    setName(getName);\n    setRoom(getRoom);\n    socket = io(endpoint);\n    socket.emit('join', {\n      getName,\n      getRoom\n    }, () => {});\n  }, [endpoint, location.search]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"+HUT7rZSODbKDWTTNxtVHg5rcFE=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/jathu/Desktop/Clones/chat-online/client/src/components/chat/Chat.js"],"names":["React","useEffect","useState","io","port","endpoint","socket","Chat","location","name","setName","room","setRoom","getName","search","substring","indexOf","getRoom","emit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,IAAI,GAAG,IAAb;AACA,MAAMC,QAAQ,GAAI,aAAYD,IAAK,EAAnC;AACA,IAAIE,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,OAAO,GAAGL,QAAQ,CAACM,MAAT,CAAgBC,SAAhB,CAA0B,CAA1B,EAA6BP,QAAQ,CAACM,MAAT,CAAgBE,OAAhB,CAAwB,GAAxB,CAA7B,CAAhB;AACA,UAAMC,OAAO,GAAGT,QAAQ,CAACM,MAAT,CAAgBC,SAAhB,CAA0BP,QAAQ,CAACM,MAAT,CAAgBE,OAAhB,CAAwB,GAAxB,IAA+B,CAAzD,CAAhB;AACAN,IAAAA,OAAO,CAACG,OAAD,CAAP;AACAD,IAAAA,OAAO,CAACK,OAAD,CAAP;AACAX,IAAAA,MAAM,GAAGH,EAAE,CAACE,QAAD,CAAX;AACAC,IAAAA,MAAM,CAACY,IAAP,CAAY,MAAZ,EAAoB;AAAEL,MAAAA,OAAF;AAAWI,MAAAA;AAAX,KAApB,EAA0C,MAAM,CAE/C,CAFD;AAGH,GATQ,EASN,CAACZ,QAAD,EAAWG,QAAQ,CAACM,MAApB,CATM,CAAT;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAjBD;;GAAMP,I;;KAAAA,I;AAmBN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst port = 5000;\nconst endpoint = `localhost:${port}`;\nlet socket;\n\nconst Chat = ({ location }) => {\n    const [name, setName] = useState('dwada');\n    const [room, setRoom] = useState('');\n\n    useEffect(() => {\n        const getName = location.search.substring(6, location.search.indexOf('&'));\n        const getRoom = location.search.substring(location.search.indexOf('&') + 6);\n        setName(getName);\n        setRoom(getRoom);\n        socket = io(endpoint);\n        socket.emit('join', { getName, getRoom }, () => {\n\n        });\n    }, [endpoint, location.search]);\n    return (\n        <h1>Chat</h1>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}